(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{317:function(t,e,n){"use strict";n.r(e);var a=n(0),s=Object(a.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"section-02-execution-contexts-and-lexical-environments"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#section-02-execution-contexts-and-lexical-environments","aria-hidden":"true"}},[t._v("#")]),t._v(" Section 02 - Execution Contexts and Lexical Environments")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#section-02---execution-contexts-and-lexical-environments"}},[t._v("Section 02 - Execution Contexts and Lexical Environments")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#note-syntax-parsers-execution-contexts-and-lexical-environments"}},[t._v("[Note] Syntax Parsers, Execution Contexts and Lexical Environments")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#%E8%AA%9E%E6%B3%95%E8%A7%A3%E6%9E%90%E5%99%A8syntax-parsers"}},[t._v("語法解析器（Syntax Parsers）")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#%E8%A9%9E%E5%BD%99%E7%92%B0%E5%A2%83lexical-environments"}},[t._v("詞彙環境（Lexical Environments）")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#%E5%9F%B7%E8%A1%8C%E7%92%B0%E5%A2%83execution-contexts"}},[t._v("執行環境（Execution Contexts）")])])])]),t._v(" "),n("li",[n("a",{attrs:{href:"#note-namevalue-pairs-and-objects"}},[t._v("[Note] Name/Value Pairs and Objects")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#note-the-global-environment-and-the-global-object"}},[t._v("[Note] The Global Environment and The Global Object")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#note-hoisting"}},[t._v("[Note] Hoisting")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#note-the-keyword-undefined"}},[t._v("[Note] The Keyword "),n("code",[t._v("undefined")])])]),t._v(" "),n("li",[n("a",{attrs:{href:"#note-the-execution-context---code-execution"}},[t._v("[Note] The Execution Context - Code Execution")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#note-conceptual-aside-single-threaded-synchronous-execution"}},[t._v("[Note] Conceptual Aside: Single Threaded, Synchronous Execution")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#note-function-invocation-and-the-execution-stack"}},[t._v("[Note] Function Invocation and the Execution Stack")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#note-functions-context-and-variable-environments"}},[t._v("[Note] Functions, Context and Variable Environments")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#note-the-scope-chain"}},[t._v("[Note] The Scope Chain")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#note-scope-es6-and-let"}},[t._v("[Note] Scope, ES6 and let")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#note-what-about-asynchronous-callbacks"}},[t._v("[Note] What About Asynchronous Callbacks?")])])])])]),t._v(" "),n("h2",{attrs:{id:"note-syntax-parsers-execution-contexts-and-lexical-environments"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#note-syntax-parsers-execution-contexts-and-lexical-environments","aria-hidden":"true"}},[t._v("#")]),t._v(" [Note] Syntax Parsers, Execution Contexts and Lexical Environments")]),t._v(" "),n("h3",{attrs:{id:"語法解析器（syntax-parsers）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#語法解析器（syntax-parsers）","aria-hidden":"true"}},[t._v("#")]),t._v(" 語法解析器（Syntax Parsers）")]),t._v(" "),n("blockquote",[n("p",[t._v("A program that reads your code and determines what it does and if its grammer is valid.")])]),t._v(" "),n("p",[n("strong",[t._v("語法解析器（Syntax Parsers）")]),t._v(" 能夠逐字元地讀取程式碼，檢查其合法性並決定這些詞條（token）必須執行的指令。換句話說，在一門程式語言中所規定的語法是否有效，以及他要做些什麼都會交由語法解析器來決定。所有的程式碼都必須經過編譯器或直譯器進行解析，轉換為實際在電腦上所執行的指令。")]),t._v(" "),n("h3",{attrs:{id:"詞彙環境（lexical-environments）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#詞彙環境（lexical-environments）","aria-hidden":"true"}},[t._v("#")]),t._v(" 詞彙環境（Lexical Environments）")]),t._v(" "),n("blockquote",[n("p",[t._v("Where something sits physically in the code you write.")])]),t._v(" "),n("p",[n("strong",[t._v("詞彙環境（Lexical Environments）")]),t._v(" 是指程式碼在程式中實際的位置。在 JavaScript 中，當語法解析器在解讀並轉換程式碼時，會根據變數、函式的詞彙環境不同，影響到程式碼在在記憶體中的位置與其他變數、函式之間的關係。")]),t._v(" "),n("h3",{attrs:{id:"執行環境（execution-contexts）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#執行環境（execution-contexts）","aria-hidden":"true"}},[t._v("#")]),t._v(" 執行環境（Execution Contexts）")]),t._v(" "),n("blockquote",[n("p",[t._v("A wrapper to help manage the code that is running.")])]),t._v(" "),n("p",[t._v("在一段程式碼中，存在有許多個詞彙環境，決定其執行順序的就是所謂的 "),n("strong",[t._v("執行環境（Execution Contexts）")]),t._v(" 或稱為執行上下文。")]),t._v(" "),n("h2",{attrs:{id:"note-name-value-pairs-and-objects"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#note-name-value-pairs-and-objects","aria-hidden":"true"}},[t._v("#")]),t._v(" [Note] Name/Value Pairs and Objects")]),t._v(" "),n("p",[t._v("在 JavaScript 中，所謂的 "),n("strong",[t._v("物件（object）")]),t._v(" 就是存放著許多由鍵值對的集合，除此之外，物件中可以嵌套其他物件。比如：")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Street"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Main'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  Number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  Apartment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Floor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br")])]),n("h2",{attrs:{id:"note-the-global-environment-and-the-global-object"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#note-the-global-environment-and-the-global-object","aria-hidden":"true"}},[t._v("#")]),t._v(" [Note] The Global Environment and The Global Object")]),t._v(" "),n("p",[t._v("在 JavaScript 中有三種執行環境類型：全域環境（Global Environment）、函數環境（Function Environment）與 Eval 函數環境（Eval Function Environment）。其中當執行 JavaScript 程式碼時，所建立的基礎執行環境就是全域環境，在創建全域環境的同時會自動創建：")]),t._v(" "),n("ul",[n("li",[t._v("全域物件（global object）：不屬於函數之內的物件，就是全域物件。")]),t._v(" "),n("li",[n("code",[t._v("this")]),t._v(" 變數")])]),t._v(" "),n("p",[t._v("對於瀏覽器來說，JavaScript 程式碼執行時所創建的全域物件將會是視窗 "),n("code",[t._v("windows")]),t._v("，而此時的 "),n("code",[t._v("this")]),t._v(" 變數將會等價於 "),n("code",[t._v("windows")]),t._v("。")]),t._v(" "),n("h2",{attrs:{id:"note-hoisting"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#note-hoisting","aria-hidden":"true"}},[t._v("#")]),t._v(" [Note] Hoisting")]),t._v(" "),n("p",[t._v("在下面的程式碼中，雖然函數 "),n("code",[t._v("b()")]),t._v(" 的宣告在呼叫之後，但卻能夠在宣告之前進行呼叫，而變數 "),n("code",[t._v("a")]),t._v(" 在宣告之前使用卻會是 "),n("code",[t._v("undefined")]),t._v("（若沒有宣告 "),n("code",[t._v("a")]),t._v(" 則會出現警告 "),n("code",[t._v("a is not defined")]),t._v("），這樣的現象稱為 "),n("strong",[t._v("提升（Hoisting）")]),t._v("：")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("b")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'Called b!'")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World!'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("b")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Call b!'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br")])]),n("p",[t._v("使用 "),n("strong",[t._v("提升（Hoisting）")]),t._v(" 這樣的說法可能會造成一種誤會，好似程式碼在進行解釋時會先將宣告挪至所有程式碼之前執行，但實際上的狀況並非如此。原因在於執行環境創建時會分成兩部分，第一部分稱為創造（Creation）部分，會替變數和函數在記憶體中建立空間，但針對函數與變數略有差異：")]),t._v(" "),n("ul",[n("li",[t._v("函數：將函數所有內容放入記憶體中。")]),t._v(" "),n("li",[t._v("變數：在使用等號賦值的狀況下，先替變數創建記憶體空間，此時所有變數都會被設定為 "),n("code",[t._v("undefined")]),t._v("，接著再依執行順序進行賦值。")])]),t._v(" "),n("h2",{attrs:{id:"note-the-keyword-undefined"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#note-the-keyword-undefined","aria-hidden":"true"}},[t._v("#")]),t._v(" [Note] The Keyword "),n("code",[t._v("undefined")])]),t._v(" "),n("h2",{attrs:{id:"note-the-execution-context-code-execution"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#note-the-execution-context-code-execution","aria-hidden":"true"}},[t._v("#")]),t._v(" [Note] The Execution Context - Code Execution")]),t._v(" "),n("h2",{attrs:{id:"note-conceptual-aside-single-threaded-synchronous-execution"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#note-conceptual-aside-single-threaded-synchronous-execution","aria-hidden":"true"}},[t._v("#")]),t._v(" [Note] Conceptual Aside: Single Threaded, Synchronous Execution")]),t._v(" "),n("h2",{attrs:{id:"note-function-invocation-and-the-execution-stack"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#note-function-invocation-and-the-execution-stack","aria-hidden":"true"}},[t._v("#")]),t._v(" [Note] Function Invocation and the Execution Stack")]),t._v(" "),n("h2",{attrs:{id:"note-functions-context-and-variable-environments"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#note-functions-context-and-variable-environments","aria-hidden":"true"}},[t._v("#")]),t._v(" [Note] Functions, Context and Variable Environments")]),t._v(" "),n("h2",{attrs:{id:"note-the-scope-chain"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#note-the-scope-chain","aria-hidden":"true"}},[t._v("#")]),t._v(" [Note] The Scope Chain")]),t._v(" "),n("h2",{attrs:{id:"note-scope-es6-and-let"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#note-scope-es6-and-let","aria-hidden":"true"}},[t._v("#")]),t._v(" [Note] Scope, ES6 and let")]),t._v(" "),n("h2",{attrs:{id:"note-what-about-asynchronous-callbacks"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#note-what-about-asynchronous-callbacks","aria-hidden":"true"}},[t._v("#")]),t._v(" [Note] What About Asynchronous Callbacks?")])])},[],!1,null,null,null);e.default=s.exports}}]);